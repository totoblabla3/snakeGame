{"version":3,"sources":["components/uiKit/Food/Food.module.css","components/uiKit/Snake/Snake.jsx","components/uiKit/Food/Food.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Item","styled","div","dot","oldLength","i","oldDot","keyframes","moveVertically","speed","Snake","length","snake","map","key","Food","food","className","c","Food_dot","style","left","top","UP","DOWN","RIGHT","LEFT","getRandomCoordinates","Math","floor","MAP_SIZE","random","DirectionsStack","array","this","direction","push","next","at","splice","EntryState","pause","directions_stack","items","copyObj","obj","JSON","parse","stringify","App","state","game_cycle","undefined","handleKeyDown","e","window","event","keyCode","_play","_pause","updateStack","document","onkeydown","alert","_checkBorder","_checkSnakeCollapse","_eatFood","clearInterval","setState","setInterval","_moveSnake","head","_gameOver","pop","forEach","item","unshift","stack","last_direction","getLast","getArray","newLength","shift","getScore","onSwipe","d","onDoubleClick","onClick","Component","SwipeHandlerWrapper","children","handlers","useSwipeable","onSwipedUp","onSwipedDown","onSwipedLeft","onSwipedRight","DoubleClickHandler","delay","useState","click","setClick","useEffect","timer","setTimeout","clearTimeout","prev","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00bf567d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Food_dot\":\"Food_Food_dot__pDaQx\"};","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst moveVertically = (dot, oldDot) =>\n  keyframes`\n    0% {\n        left: ${oldDot[0]}%;\n        top: ${oldDot[1]}%\n    }\n    100% {\n      left: ${dot[0]}%;\n      top: ${dot[1]}%\n    }\n`;\n\nconst Item = styled.div`\n    position: absolute;\n    width: 3.6%;\n    height: 3.6%;\n    background-color: #88c586;\n    border: 2px solid #424645;\n    margin: 0.4%;\n    z-index: 2;\n    left: ${({ dot }) => dot[0]}%;\n    top: ${({ dot }) => dot[1]}%;\n    animation-name : ${(({ dot, oldLength, i }) => moveVertically(dot, oldLength[i] || [oldLength[i - 1]]))};\n    animation-duration: ${({speed}) => speed / 1000}s;\n    animation-timing-function: linear;\n\n    @media (max-width: 440px) { \n      border: 1px solid #424645;\n      margin: 0.15%;\n    }\n`\n\nexport const Snake = ({ length, oldLength, speed }) => {\n  const snake = length.map((dot, i) =>\n    <Item key={i} i={i} speed={speed} dot={dot} oldLength={oldLength} />\n  )\n  return <div>{snake}</div>\n}\n\n","import React from 'react';\nimport c from './Food.module.css';\n\nexport const Food = ({ food }) => {\n  return <div\n    className={c.Food_dot}\n    style={{\n      left: `${food[0]}%`,\n      top: `${food[1]}%`\n    }}\n  />\n}\n\n","import React, { Component, useState, useEffect } from 'react';\nimport './App.css';\nimport { Snake, Food } from \"./components/uiKit\";\nimport { useSwipeable } from 'react-swipeable';\n\nconst UP = 'UP'\nconst DOWN = 'DOWN'\nconst RIGHT = 'RIGHT'\nconst LEFT = 'LEFT'\n\nconst MAP_SIZE = 500\nconst SPEED = 200\n\nconst getRandomCoordinates = () => {\n  let max = MAP_SIZE / 5;\n  let x = Math.floor((Math.random() * (max)) / 5) * 5;\n  let y = Math.floor((Math.random() * (max)) / 5) * 5;\n  return [x, y]\n}\n\nclass DirectionsStack {\n  constructor(\n    array,\n  ) {\n    this.array = array\n  }\n\n  push(direction) {\n    if (this.array.length < 3) this.array.push(direction)\n  }\n\n  getArray() {\n    return this.array\n  }\n\n  getCurrent() {\n    return this.array[0]\n  }\n\n  getLast() {\n    return this.array[this.array.length - 1]\n  }\n\n  next() {\n    const next = this.array.at(1)\n    if (next) {\n      this.array.splice(0, 1)\n      return next\n    } else {\n      return this.array[0]\n    }\n  }\n}\n\nconst EntryState = {\n  snake: {\n    pause: false,\n    directions_stack: [RIGHT],\n    speed: SPEED,\n    oldLength: [\n      [0, 0],\n      [0, 0],\n    ],\n    length: [\n      [0, 0],\n      [5, 0],\n    ],\n  },\n  items: {\n    food: getRandomCoordinates()\n  }\n}\n\nconst copyObj = (obj) => {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport class App extends Component {\n\n  state = copyObj(EntryState)\n  game_cycle = undefined\n\n  componentDidMount() {\n    document.onkeydown = this.handleKeyDown\n\n    // if (process.env.REACT_APP_DEV) return\n    alert(\"Controls\\n\\n— On laptop: Use WASD or arrows. Press space to pause.\\n— On touchscreen: Use swipes. Double tap to pause.\\n\\nStart the game?\")\n    this._play()\n  }\n\n  componentDidUpdate() {\n    this._checkBorder()\n    this._checkSnakeCollapse()\n    this._eatFood()\n  }\n\n\n  _pause() {\n    clearInterval(this.game_cycle)\n    this.game_cycle = undefined\n    this.setState({ pause: true })\n  }\n\n  _play() {\n    this.game_cycle = setInterval(\n      () => this._moveSnake(),\n      this.state.snake.speed\n    )\n    this.setState({ pause: false })\n  }\n\n  _checkBorder() {\n    const { snake: { length } } = this.state\n    const head = length[length.length - 1]\n    if (\n      (head[0] >= MAP_SIZE / 5) ||\n      (head[1] >= MAP_SIZE / 5) ||\n      (head[0] < 0) ||\n      (head[1] < 0)\n    ) {\n      this._gameOver()\n    }\n  }\n\n  _checkSnakeCollapse() {\n    let length = [...this.state.snake.length]\n    const head = length[length.length - 1]\n    length.pop()\n    length.forEach((item) => {\n      if (item[0] === head[0] && item[1] === head[1]) {\n        this._gameOver()\n      }\n    })\n  }\n\n  _eatFood() {\n    const { items: { food } } = this.state\n    let length = [...this.state.snake.length]\n    let oldLength = [...this.state.snake.oldLength]\n    const head = length[length.length - 1]\n\n    if (food[0] === head[0] && food[1] === head[1]) {\n      length.unshift(oldLength[0])\n      oldLength.unshift(oldLength[0])\n      this.setState({\n        items: { food: getRandomCoordinates() },\n        snake: { ...this.state.snake, length: length, oldLength: oldLength }\n      })\n    }\n  }\n\n  handleKeyDown = (e) => {\n    e = e || window.event\n\n    if (e.keyCode === 32) {\n      this.state.pause ? this._play() : this._pause()\n    }\n\n    switch (e.keyCode) {\n      //Стрелки\n      case 38: {\n        this.updateStack(UP)\n        break\n      }\n      case 40: {\n        this.updateStack(DOWN)\n        break\n      }\n      case 39: {\n        this.updateStack(RIGHT)\n        break\n      }\n      case 37: {\n        this.updateStack(LEFT)\n        break\n      }\n      //Буквы\n      case 87: {\n        this.updateStack(UP)\n        break\n      }\n      case 83: {\n        this.updateStack(DOWN)\n        break\n      }\n      case 65: {\n        this.updateStack(LEFT)\n        break\n      }\n      case 68: {\n        this.updateStack(RIGHT)\n        break\n      }\n      default: { }\n    }\n  }\n\n  updateStack(direction) {\n    if (this.state.pause) return\n\n    let { directions_stack } = this.state.snake\n    const stack = new DirectionsStack(directions_stack)\n    const last_direction = stack.getLast()\n\n    switch (direction) {\n      case UP: {\n        if (last_direction !== DOWN && last_direction !== UP) stack.push(UP)\n        break\n      }\n      case DOWN: {\n        if (last_direction !== UP && last_direction !== DOWN) stack.push(DOWN)\n        break\n      }\n      case RIGHT: {\n        if (last_direction !== LEFT && last_direction !== RIGHT) stack.push(RIGHT)\n        break\n      }\n      case LEFT: {\n        if (last_direction !== RIGHT && last_direction !== LEFT) stack.push(LEFT)\n        break\n      }\n      default: { }\n    }\n\n    this.setState({\n      snake: {\n        ...this.state.snake,\n        directions_stack: stack.getArray()\n      }\n    })\n  }\n\n  _moveSnake() {\n    const { directions_stack, length } = this.state.snake\n    const stack = new DirectionsStack(directions_stack)\n    let newLength = [...this.state.snake.length]\n    let head = length[length.length - 1]\n\n    switch (stack.next()) {\n      case UP: {\n        head = [head[0], head[1] - 5]\n        break\n      }\n      case DOWN: {\n        head = [head[0], head[1] + 5]\n        break\n      }\n      case RIGHT: {\n        head = [head[0] + 5, head[1]]\n        break\n      }\n      case LEFT: {\n        head = [head[0] - 5, head[1]]\n        break\n      }\n      default: { }\n    }\n\n    newLength.push(head)\n    newLength.shift()\n\n    this.setState({\n      snake:\n      {\n        ...this.state.snake,\n        length: newLength,\n        oldLength: length,\n        directions_stack: stack.getArray()\n      }\n    })\n  }\n\n  getScore() {\n    return this.state.snake.length.length - 2\n  }\n\n  _gameOver() {\n    alert(`Game over\\n Score: ${this.getScore()}`)\n    this.setState(copyObj(EntryState))\n  }\n\n  render() {\n    const {\n      pause,\n      snake: {\n        length,\n        oldLength,\n        speed\n      },\n      items: { food }\n    } = this.state\n\n    return (\n      <SwipeHandlerWrapper onSwipe={(d) => this.updateStack(d)}>\n        <DoubleClickHandler onDoubleClick={() => pause ? this._play() : this._pause()}>\n          <div className=\"App\">\n            <div className=\"wrapper\">\n              <div className=\"header\">\n                <div className=\"score\">Score: {this.getScore()}</div>\n                <div className=\"pause\">\n                  {pause\n                    ? <div onClick={() => this._play()}>play</div>\n                    : <div onClick={() => this._pause()}>pause</div>\n                  }\n                </div>\n              </div>\n              <div className=\"Map\">\n                <Snake speed={speed} oldLength={oldLength} length={length} />\n                <Food food={food} />\n              </div>\n            </div>\n          </div>\n        </DoubleClickHandler >\n      </SwipeHandlerWrapper>\n    )\n  }\n}\n\nconst SwipeHandlerWrapper = ({ children, onSwipe }) => {\n  const handlers = useSwipeable({\n    onSwipedUp: () => onSwipe(UP),\n    onSwipedDown: () => onSwipe(DOWN),\n    onSwipedLeft: () => onSwipe(LEFT),\n    onSwipedRight: () => onSwipe(RIGHT),\n  });\n\n  return <div {...handlers} className=\"wrapper\">{children}</div>\n}\n\nconst DoubleClickHandler = ({ children, onDoubleClick = () => null, delay = 250 }) => {\n  const [click, setClick] = useState(0)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setClick(0), delay);\n    if (click === 2) onDoubleClick()\n    return () => clearTimeout(timer)\n  }, [click]);\n\n  return <div className=\"wrapper\" onClick={() => setClick(prev => prev + 1)}>{children}</div>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}